// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StdFrase.Api.Data;

#nullable disable

namespace StdFrase.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251002154850_AddActivityOrder")]
    partial class AddActivityOrder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StdFrase.Api.Data.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActivityOrder")
                        .HasColumnType("int");

                    b.Property<Guid>("FlowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("FlowId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("StdFrase.Api.Data.Cuesta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("Path")
                        .IsUnique();

                    b.ToTable("Cuestas");
                });

            modelBuilder.Entity("StdFrase.Api.Data.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CuestaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FieldOrder")
                        .HasColumnType("int");

                    b.Property<short>("FieldType")
                        .HasColumnType("smallint");

                    b.Property<string>("StandardPhrase")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CuestaId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("StdFrase.Api.Data.Flow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Flows");
                });

            modelBuilder.Entity("StdFrase.Api.Data.Activity", b =>
                {
                    b.HasOne("StdFrase.Api.Data.Flow", "Flow")
                        .WithMany("Activities")
                        .HasForeignKey("FlowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flow");
                });

            modelBuilder.Entity("StdFrase.Api.Data.Field", b =>
                {
                    b.HasOne("StdFrase.Api.Data.Activity", "Activity")
                        .WithMany("Fields")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StdFrase.Api.Data.Cuesta", "Cuesta")
                        .WithMany()
                        .HasForeignKey("CuestaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Cuesta");
                });

            modelBuilder.Entity("StdFrase.Api.Data.Activity", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("StdFrase.Api.Data.Flow", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
